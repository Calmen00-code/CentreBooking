// <auto-generated />
using CentreBookingDatabase.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CentreBookingDatabase.Migrations
{
    [DbContext(typeof(CentreBookingContext))]
    partial class CentreBookingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CentreBookingDatabase.Models.Booking", b =>
                {
                    b.Property<string>("CentreName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CentreName");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("CentreBookingDatabase.Models.Centre", b =>
                {
                    b.Property<string>("CentreName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CentreName");

                    b.ToTable("Centres");
                });

            modelBuilder.Entity("CentreBookingDatabase.Models.Booking", b =>
                {
                    b.HasOne("CentreBookingDatabase.Models.Centre", "Centre")
                        .WithMany("Bookings")
                        .HasForeignKey("CentreName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Centre");
                });

            modelBuilder.Entity("CentreBookingDatabase.Models.Centre", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
